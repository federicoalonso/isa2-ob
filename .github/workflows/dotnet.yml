# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "feature/gitactions" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build:
    name: Build and Test

    env:
      SOLUTION: 'ArenaGestor.sln'
      PATH_CODE: './codigo/ArenaGestor'

    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read
      checks: write

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore $PATH_CODE/$SOLUTION
    - name: Build
      run: dotnet build --no-restore $PATH_CODE/$SOLUTION
    - name: Test API
      run: dotnet test --no-build --verbosity normal $PATH_CODE/$SOLUTION --logger "trx;LogFileName=test-results.trx" || true
    
    - name: Test Report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: DotNET Tests
        path: '**/test-results.trx'
        reporter: dotnet-trx
        fail-on-error: true

    - name: SonarQube Scan
      uses: kitabisa/sonarqube-action@v1.2.0
      with:
        host: ${{ secrets.SONARQUBE_HOST }}
        login: ${{ secrets.SONARQUBE_TOKEN }}
        projectBaseDir: "codigo/ArenaGestor/"
        projectKey: "isa2"